{"version":3,"sources":["List.js","Autocomplete.js","App.js","index.js"],"names":["List","cardList","this","props","list","length","allowZeroExpanded","style","border","sort","map","item","index","key","location","className","borderBottom","Object","keys","eachValue","eachIndex","textAlign","padding","borderRight","fontWeight","lodash","capitalize","replace","isEmpty","isNil","Component","Autocomplete","makeApiCall","searchInput","requestOptions","method","headers","body","JSON","stringify","searchString","fetch","then","response","json","data","object","omit","filteredOptions","orderBy","setState","activeOption","showListComponent","userInput","catch","error","onChange","e","currentTarget","value","onKeyDown","state","keyCode","Fragment","type","placeholder","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c8205633.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport lodash from 'lodash';\r\nimport {\r\n    Accordion,\r\n    AccordionItem,\r\n    AccordionItemHeading,\r\n    AccordionItemButton,\r\n    AccordionItemPanel,\r\n} from 'react-accessible-accordion';\r\nimport 'react-accessible-accordion/dist/fancy-example.css';\r\n\r\nexport class List extends Component {\r\n\r\n    render() {\r\n\r\n        // console.log(\"Props\", this.props.list);\r\n        const cardList = this.props && this.props.list && this.props.list.length ? this.props.list : [];\r\n        return (\r\n            <div>\r\n                {cardList && cardList.length ?\r\n                    <Accordion allowZeroExpanded style={{ border: \"0.1em solid #ffffff\" }}>\r\n                        {cardList.sort().map((item, index) => (\r\n                            <AccordionItem key={index}>\r\n                                <AccordionItemHeading>\r\n                                    <AccordionItemButton>\r\n                                        {item.location}\r\n                                    </AccordionItemButton>\r\n                                </AccordionItemHeading>\r\n                                <AccordionItemPanel>\r\n                                    <div className=\"container\" style={{ border: \"0.1em solid #333333\", borderBottom: \"none\" }}>\r\n                                        {Object.keys(item).map((eachValue, eachIndex) => {\r\n                                            return eachValue !== \"location\" ?\r\n                                                <div className=\"row\" style={{ borderBottom: \"0.1em solid black\" }} key={eachIndex}>\r\n                                                    <span className=\"col-md-6\"\r\n                                                        style={{\r\n                                                            textAlign: \"left\", padding: \"0.1em 0.1em 0.1em 1em\",\r\n                                                            borderRight: \"0.1em solid black\", fontWeight: \"bolder\"\r\n                                                        }}>\r\n                                                        {lodash.capitalize(lodash.replace(eachValue, \"_\", \" \"))}\r\n                                                    </span>\r\n                                                    <span className=\"col-md-6\"\r\n                                                        style={{\r\n                                                            textAlign: \"left\", padding: \"0.1em 0.1em 0.1em 1em\",\r\n                                                            fontWeight: \"normal\"\r\n                                                        }}>\r\n                                                        {!lodash.isEmpty(item[eachValue]) && !lodash.isNil(item[eachValue]) ? item[eachValue] : \"-\"}\r\n                                                    </span>\r\n                                                </div> : <div></div>\r\n\r\n                                        })}\r\n\r\n                                    </div>\r\n\r\n                                </AccordionItemPanel>\r\n                            </AccordionItem>\r\n                        ))}\r\n                    </Accordion>\r\n                    :\r\n                    <div className=\"text-center\">\r\n                        <h1>Can't find that Battle Location ...</h1>\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n        );\r\n    }\r\n};\r\n\r\nexport default List;","import React, { Component } from 'react';\r\nimport List from './List';\r\nimport lodash from 'lodash';\r\n\r\nexport class Autocomplete extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            activeOption: 0,\r\n            filteredOptions: [],\r\n            showListComponent: false,\r\n            userInput: ''\r\n        };\r\n    }\r\n    makeApiCall = searchInput => {\r\n        // let searchUrl = `http://localhost:5000/searchBySearchString`;\r\n        let searchUrl = `https://obscure-woodland-97009.herokuapp.com/searchBySearchString`;\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ searchString: searchInput })\r\n        };\r\n        fetch(searchUrl, requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                // console.log('Request success: ', data);\r\n                data = lodash.map(data, function (object) {\r\n                    return lodash.omit(object, ['_id']);\r\n                });\r\n                data = lodash.orderBy(data, ['location'], ['asc']);\r\n                const filteredOptions = data;\r\n                this.setState({\r\n                    activeOption: 0,\r\n                    filteredOptions,\r\n                    showListComponent: true,\r\n                    userInput: searchInput\r\n                });\r\n            })\r\n\r\n            .catch(function (error) {\r\n                // console.log('Request failure: ', error);\r\n            });\r\n\r\n    };\r\n\r\n    onChange = (e) => {\r\n        // console.log('onChanges');\r\n        const userInput = e.currentTarget.value;\r\n        if (userInput && userInput.length) {\r\n            this.makeApiCall(userInput);\r\n        } else {\r\n            this.setState({\r\n                activeOption: 0,\r\n                filteredOptions: [],\r\n                showListComponent: false,\r\n                userInput: ''\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n    onKeyDown = (e) => {\r\n        const { activeOption, filteredOptions } = this.state;\r\n\r\n        if (e.keyCode === 13) {\r\n            this.setState({\r\n                activeOption: 0,\r\n                userInput: filteredOptions[activeOption]\r\n            });\r\n        } else if (e.keyCode === 38) {\r\n            if (activeOption === 0) {\r\n                return;\r\n            }\r\n            this.setState({ activeOption: activeOption - 1 });\r\n        } else if (e.keyCode === 40) {\r\n            if (activeOption === filteredOptions.length - 1) {\r\n                // console.log(activeOption);\r\n                return;\r\n            }\r\n            this.setState({ activeOption: activeOption + 1 });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            onChange,\r\n            onKeyDown,\r\n\r\n            state: { filteredOptions, userInput }\r\n        } = this;\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"container\">\r\n                    <h1\r\n                        style={{ textAlign: \"center\", padding: \"1em\" }}>\r\n                        Welcome to the Location Based Search Battle App\r\n                    </h1>\r\n                    <div className=\"search\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"search-box\"\r\n                            placeholder=\"Search Battle Location Name\"\r\n                            onChange={onChange}\r\n                            onKeyDown={onKeyDown}\r\n                            value={userInput}\r\n                        />\r\n                    </div>\r\n                    {\r\n                        this.state.showListComponent ? <List list={filteredOptions} /> : \"\"\r\n                    }\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Autocomplete;\r\n","import React from 'react';\nimport './App.css';\nimport Autocomplete from \"./Autocomplete\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Autocomplete />\n    </div>\n  );\n}\n\nexport default App;\n","\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}